name: Build @cryptlex/lexactivator package

on:
  workflow_dispatch:
    inputs:
      libraryVersion:
        description: 'Library Version'
        required: true
        default: ''
      packageVersion:
        description: 'Package Version'
        required: true
        default: ''

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      
      - name: Update Library Version
        run: |
          sed -i '/const version =/!b;cconst version = \"v${{ github.event.inputs.libraryVersion }}";' predownload.js    
      
      - name: Update Package Version
        run: |
          sed -i '/"version":/!b;c \ \ "version": "${{ github.event.inputs.packageVersion }}",' package.json
     
      - name: Commit and Tag
        run: |
          git add predownload.js
          git add package.json
          git config --local user.email "github-actions@users.noreply.github.com"
          git config --local user.name "github-actions"
          git commit -m "updated version"
          git tag ${{ github.event.inputs.packageVersion }}    
      
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true 
     
  build:
    needs: update-version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, macos-latest, windows-2019]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install Windows 2015 build tools
        if: matrix.os == 'windows-2019'
        run: npm i --global windows-build-tools --vs2015
      - run: npm i --build-from-source
      - run: npm run s3-publish
        env:
          node_pre_gyp_accessKeyId: ${{secrets.node_pre_gyp_accessKeyId}}
          node_pre_gyp_secretAccessKey: ${{secrets.node_pre_gyp_secretAccessKey}}
          node_pre_gyp_bucket: ${{secrets.node_pre_gyp_bucket}}
      - name: Build for windows x86
        if: matrix.os == 'windows-2019'
        run: npm i --target_arch=ia32 --build-from-source 
      - name: Publish windows x86
        if: matrix.os == 'windows-2019'
        run: npm run s3-publish --target_arch=ia32
        env:
          node_pre_gyp_accessKeyId: ${{secrets.node_pre_gyp_accessKeyId}}
          node_pre_gyp_secretAccessKey: ${{secrets.node_pre_gyp_secretAccessKey}}
          node_pre_gyp_bucket: ${{secrets.node_pre_gyp_bucket}}

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
